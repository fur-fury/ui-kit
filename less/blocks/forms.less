/*иконки*/
@font-face {
  font-family: 'Glyphicons Halflings';
  src: url('@{icon-font-path}@{icon-font-name}.eot');
  src: url('@{icon-font-path}@{icon-font-name}.eot?#iefix') format('embedded-opentype'),
       url('@{icon-font-path}@{icon-font-name}.woff2') format('woff2'),
       url('@{icon-font-path}@{icon-font-name}.woff') format('woff'),
       url('@{icon-font-path}@{icon-font-name}.ttf') format('truetype'),
       url('@{icon-font-path}@{icon-font-name}.svg#@{icon-font-svg-id}') format('svg');
}

.glyphicon {
  position: relative;
  top: 1px;
  display: inline-block;
  font-family: 'Glyphicons Halflings';
  font-style: normal;
  font-weight: normal;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.glyphicon-record                 { &:before { content: "\e165"; } }
.glyphicon-ok                     { &:before { content: "\e013"; } }
.glyphicon-remove                 { &:before { content: "\e014"; } }
.glyphicon-home                   { &:before { content: "\e021"; } }



/*переменные*/
@input-height-base:35px;
@font-size-base:15px;
@input-color:#3f3f3f;
@input-border-radius:5px;
@input-border:#ccc;

//миксин для состояния текстового инпута
.form-input-validation(@color) {
	border: 2px solid @color;

					& +.glyphicon {
						color: @color;
					}
}




/*----- бутстрап -----*/

.form-control {
  display: block;
  width: 100%;
  height: @input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: @padding-base-vertical @padding-base-horizontal;
  font-size: @font-size-base;
  line-height: @line-height-base;
  color: @input-color;
  background-color: @input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid @input-border;
  border-radius: @input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  //.box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  .transition(~"border-color ease-in-out .15s, box-shadow ease-in-out .15s");

  // Customize the `:focus` state to imitate native WebKit styles.
  .form-control-focus();

  // Placeholder
  .placeholder();

 
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: @input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: default;
  }

  // Reset height for `textarea`s
  textarea& {
    height: auto;
  }
}


.radio,
.checkbox {
  position: relative;
  display: block;
  margin-top: 10px;
  margin-bottom: 10px;

  label {
    min-height: @line-height-computed; // Ensure the input doesn't jump when there is no text
    padding-left: 10px;
    margin-bottom: 0;
    font-weight: normal;
    cursor: pointer;
  }
}

.radio + .radio,
.checkbox + .checkbox {
  margin-top: -5px; // Move up sibling radios or checkboxes for tighter spacing
}

.has-feedback {
  // Enable absolute positioning
  position: relative;

  // Ensure icons don't overlap text
  .form-control {
    padding-right: (@input-height-base * 1.25);
  }
}
// Feedback icon (requires .glyphicon classes)
.form-control-feedback {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 2; // Ensure icon is above input groups
  display: block;
  width: @input-height-base;
  height: @input-height-base;
  line-height: @input-height-base;
  text-align: center;
  pointer-events: none;
}

.has-feedback label {

  & ~ .form-control-feedback {
     top: (@line-height-computed); // Height of the `label` and its margin
  }
}


/*основное*/
/*inputs*/

.form-input-wrapper {
	background-color: #fff;
	padding: 30px;
	border-radius: 5px;


	form {
		width: 245px;
	}

	input[type=text] {
		margin-bottom: 20px;
	}

	.form-group:last-of-type input {margin: 0;}

	.has-success {
		.form-input-validation(@color-green);
		}
	.has-error {
		.form-input-validation(@color-red);
		}
	.disabled {
		background-color: #fff;
	}
	.has-focus {
		border-color: darken(@input-border, 30%);
    outline: 0;
	}
}



.form-check-wrapper {
	background-color: #fff;
	border-radius: 5px;
	width: 100%;
	padding: 10px;

				p {
						margin: 5px 0;
						font-size: 15px;
					}


}
			
		.form-radio {

			.radio {
				vertical-align: top;
				width: 16px;
				height: 16px;
				margin: 0;
			}

			.radio + label {
				cursor: pointer;
			}

			.disabled + label{
						cursor:default;
						color: #ccc;
					}

			.radio:not(checked) {
				position: absolute;
				opacity: 0;
			}

			.radio:not(checked) + label {
				position: relative;
				padding: 0 0 0 25px;
			}

			.radio:not(checked) + label:before {
				content: '';
				position: absolute;
				top: 2px;
				left: 1px;
				width: 13px;
				height: 13px;
				border: 1px solid #ccc;
				border-radius: 50%;
				background: #FFF;
			}

			.radio:not(checked) + label:after {
				content: '\e165';
				font-family: 'Glyphicons Halflings';
				position: absolute;
				top: -1px;
				left: 1px;
				width: 16px;
				height: 16px;
				border: none;
				font-size: 16px;
				opacity: 0;
				transition: all .2s;
				color: @color-red;
			}

			.radio:checked + label:after {
				opacity: 1;
			}

			.radio:checked + label:before {
				opacity: 0;
			}

	}



	.form-checkbox {



				*, *:before, *:after {box-sizing: border-box;}

					.checkbox {
					  vertical-align: top;
					  margin: 0 3px 0 0;
					  width: 17px;
					  height: 17px;
					}

					.checkbox + label {
					  cursor: pointer;
					}

					.disabled + label{
						cursor:default;
						color: #ccc;
					}

					.checkbox:not(checked) {
					  position: absolute;
					  opacity: 0;
					}
					.checkbox:not(checked) + label {
					  position: relative; 
					  padding: 0 0 0 25px;
					}
					/* Оформление первой части чекбокса в выключенном состоянии (фон). */
					.checkbox:not(checked) + label:before {
					  content: '';
					  position: absolute;
					  top:0px;
					  left: 0px;
					  width: 16px;
					  height: 16px;
					  border-radius: 5px;
					  border: 1px solid #ccc;
					}
					
					.checkbox:checked + label:before {
					  border: 2px solid @color-red;
					}
					.checkbox:checked + label:after {
					  content: '\e013';
						font-family: 'Glyphicons Halflings';
						position: absolute;
						top: -3px;
						left: 3px;
						font-size: 10px;
						color: @color-red;
						}
}

.form-switch {




				.checkbox {
				  vertical-align: top;
				  margin: 0 3px 0 0;
				  width: 17px;
				  height: 17px;
				}

				.checkbox + label {
				  cursor: pointer;
				}
				
				.disabled + label{
						cursor:default;
						color: #ccc;
				}

				.checkbox:not(checked) {
				  position: absolute;
				  opacity: 0;
				}
				.checkbox:not(checked) + label {
				  position: relative; 
				  padding: 0 0 0 50px; 
				}
				/* Оформление первой части чекбокса в выключенном состоянии (фон). */
				.checkbox:not(checked) + label:before {
				  content: '';
				  position: absolute;
				  top: 2px;
				  left: 0;
				  width: 30px;
				  height: 15px;
				  border-radius: 15px;
				  background: #CDD1DA;
				}
				/* Оформление второй части чекбокса в выключенном состоянии (переключатель). */
				.checkbox:not(checked) + label:after {
				  content: '';
				  position: absolute;
				  top: 3px;
				  left: 2px;
				  width: 12px;
				  height: 12px;
				  border-radius: 10px;
				  background: #FFF;
				  transition: all .2s; /* анимация, чтобы чекбокс переключался плавно */
				}
				/* Меняем фон чекбокса, когда он включен. */
				.checkbox:checked + label:before {
				  background: #9FD468;
				}

				.checkbox:checked + label:after {
				  left: 16px;
				}

				input[disabled] + label:after {
				  background-color: #eee;
				}


}



.form-tags {
	background-color: #fff;
	border-radius: 5px;
	padding: 20px;


	.tag {
		color: @text-color;
		font-size: 13px;
		
	}
}


	





.form-select {
	font-size: 15px;
	padding: 20px;	
	background-color: #fff;
	margin-top: 20px;
	border-radius: 5px;
}

.custom-select-menu {
  display: inline-block;
  margin-bottom: 8px;
  outline: none;
  position: relative;
}

.custom-select-menu label {
  border: 1px solid @input-border;
  border-radius: 5px;
  color: @input-color;
  display: inline-block;
  padding: 10px 32px 10px 10px;
  position: relative;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-touch-callout: none;
  -webkit-user-select: none;  
  user-select: none;
  width: 200px;
}


.selection-made:after {
  border-top: 10px solid #ccc;
  border-right: 6px solid transparent;
  border-left: 6px solid transparent;
  content: '';
  position: absolute;
  right: 10px;
  top: 16px;
}


.custom-select-menu label.opened {
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}

.selection-made.opened:after {display: none;}

.selection-made.opened:before {
  border-bottom: 10px solid #ccc;
  border-right: 6px solid transparent;
  border-left: 6px solid transparent;
  content: '';
  position: absolute;
  right: 10px;
  top: 16px;
}


.custom-select-menu:focus label,
.custom-select-menu:hover label {
  border-color: @input-border;
}

/* If you don't want the menu to be too tall, then 
give it a max-height, but don't forget to allow it to
scroll so all the options are visible. */
.custom-select-menu ul {
  background: #fff;
  border: 1px solid @input-border;
  left: 10px;
  list-style: none;
  margin: 0 -10px;
  position: absolute;
  top: 39px;
  padding-left: 0;
  width: 200px; /* Set a width equal to the label. */
  z-index: 2;
}

.custom-select-menu  li {
  background-color: #fff;
  cursor: pointer;
  padding: 7px 10px;
}

.custom-select-menu .selected {
	display: none;

}

/* When you hover over an option we'll change the 
background color. We'll do the same when an option 
is selected. */
.custom-select-menu li:hover,
.custom-select-menu .selected {
	background-color: @some-orange;
	color:#fff;
}